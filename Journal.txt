Journal: QuietCasting
Author: Pavlos Christoforou
Date: 2013-01-20

A Journal about QuietCasting, raising 3 kids, programming and technology.


Article: About QuietCasting
Date: 2013-10-02
Topic: Telecommunication


Article: Web publishing a Journal
Date: 2013-01-20
Topic: Web

_Code for the Journal publishing system [is available on
github](https://github.com/pavlos-christoforou/web)_

I have been following a number of technology focused blogs and it
appears to me that for a large class of such blogs the standard blog
model with its time line format is not appropriate. Other than helping
a frequent reader quickly locate an author's latest postings (an
important feature), the creation time of each posting is
largely irrelevant. What is relevant is the topic or collection of
topics to which each posting belongs to and the blogs with the best
user interface adhere to a well defined and disciplined tagging
strategy.

It would appear that the book format with its ordered collection of
chapters and sections is a much better way to organize such valuable
content, providing a better user interface and content guidance
to readers.

These observations along with the complexity of many blogging systems
have motivated me to introduce a new format for such type of writing
which is closer to the format of a regular book. I call it simply a
*Journal*. 

A Journal is composed of a number of articles. Each article's set of
attributes is limited to a title, a date, an author and a topic. I
would like, initially at least, to keep the model very strict and
limited and applicable to my particular requirements. Such a limited
model facilitates easy organizational decisions and yields a simple
library implementation. Too many libraries and systems/frameworks in
the python world tend to be complex and over-engineered, making them
unnecessarily difficult to use and very hard to modify.

#### Design

1. The contents of a journal is organized in a single large text
file. Good editors (Emacs/VIM/Sublime Text) are extremely powerful
applications offering incredible editing/navigation/search/replace
facilities within a single buffer or file. They are not as effective
when working across a large collection of files especially if those
files are organized in a hierarchical directory structure.

2. Article attributes will be defined in terms of simple double colon
field definitions and the actual content of each article will be
written in markdown.

3. The publishing system will be a single python file with a simple
command line interface.

4. The output generated will be static html with some client site
JavaScript initially targeting bootstrap.js.

5. To start with, Github pages will host this Journal.



